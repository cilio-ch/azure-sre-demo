- name: Configure Azure VM
  hosts: azure_vm
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Start Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Install Node Exporter
      become: true
      shell: |
       curl -LO https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz
       tar xvfz node_exporter-1.7.0.linux-amd64.tar.gz
       sudo mv node_exporter-1.7.0.linux-amd64/node_exporter /usr/local/bin/
       rm -rf node_exporter*

    - name: Create systemd service for Node Exporter
      become: true
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target

          [Service]
          User=nobody
          ExecStart=/usr/local/bin/node_exporter

          [Install]
          WantedBy=default.target

    - name: Start and enable Node Exporter
      become: true
      systemd:
        name: node_exporter
        enabled: yes
        state: started

    - name: Add Fluent Bit APT key
      become: true
      apt_key:
       url: https://packages.fluentbit.io/fluentbit.key
       state: present

    - name: Add Fluent Bit APT repository
      become: true
      apt_repository:
       repo: "deb https://packages.fluentbit.io/ubuntu/focal focal main"
       state: present
       filename: fluentbit

    - name: Install Fluent Bit
      become: true
      apt:
        name: td-agent-bit
        state: present
        update_cache: yes

    - name: Ensure Fluent Bit is started
      become: true
      systemd:
        name: td-agent-bit
        enabled: yes
        state: started


    - name: Configure Fluent Bit
      become: true
      copy:
       dest: /etc/td-agent-bit/td-agent-bit.conf
       content: |
        
         [SERVICE]
             Flush        5
             Log_Level    info

         [INPUT]
             Name         systemd
             Tag          host.*
             Systemd_Filter _SYSTEMD_UNIT=sshd.service

         [OUTPUT]
             Name         stdout
             Match        *


    - name: Run NGINX container
      become: true
      docker_container:
        name: nginx
        image: nginx:latest
        ports:
          - "80:80"
        state: started
        restart_policy: always

- name: Create Prometheus user
  become: true
  user:
    name: prometheus
    system: yes
    shell: /sbin/nologin

- name: Download and extract Prometheus
  become: true
  shell: |
    cd /tmp
    curl -LO https://github.com/prometheus/prometheus/releases/download/v2.52.0/prometheus-2.52.0.linux-amd64.tar.gz
    tar -xzf prometheus-2.52.0.linux-amd64.tar.gz
    mv prometheus-2.52.0.linux-amd64 /opt/prometheus
  args:
    creates: /opt/prometheus/prometheus

- name: Configure Prometheus (prometheus.yml)
  become: true
  copy:
    dest: /opt/prometheus/prometheus.yml
    content: |
      global:
        scrape_interval: 15s

      scrape_configs:
        - job_name: 'node_exporter'
          static_configs:
            - targets: ['localhost:9100']

- name: Create symlink for prometheus
  become: true
  file:
    src: /opt/prometheus/prometheus
    dest: /usr/local/bin/prometheus
    state: link

- name: Create symlink for promtool
  become: true
  file:
    src: /opt/prometheus/promtool
    dest: /usr/local/bin/promtool
    state: link

- name: Create Prometheus systemd service
  become: true
  copy:
    dest: /etc/systemd/system/prometheus.service
    content: |
      [Unit]
      Description=Prometheus Monitoring
      After=network.target

      [Service]
      User=prometheus
      ExecStart=/usr/local/bin/prometheus \
        --config.file=/opt/prometheus/prometheus.yml \
        --storage.tsdb.path=/opt/prometheus/data \
        --web.listen-address=":9090"
      Restart=always

      [Install]
      WantedBy=multi-user.target

- name: Start Prometheus service
  become: true
  systemd:
    name: prometheus
    enabled: yes
    state: started


- name: Add Grafana APT repo key
  become: true
  apt_key:
    url: https://packages.grafana.com/gpg.key
    state: present

- name: Add Grafana repository
  become: true
  apt_repository:
    repo: deb https://packages.grafana.com/oss/deb stable main
    state: present
    filename: grafana
    update_cache: yes

- name: Install Grafana
  become: true
  apt:
    name: grafana
    state: present
    update_cache: yes

- name: Start and enable Grafana service
  become: true
  systemd:
    name: grafana-server
    enabled: yes
    state: started
